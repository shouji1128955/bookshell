"use strict";(self.webpackChunkbookshell=self.webpackChunkbookshell||[]).push([[6726],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>v});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,v=u["".concat(p,".").concat(d)]||u[d]||m[d]||l;return r?t.createElement(v,i(i({ref:n},s),{},{components:r})):t.createElement(v,i({ref:n},s))}));function v(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4450:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const l={},i="\u63a7\u5236\u5668 CRD \u4ecb\u7ecd",o={unversionedId:"Kubernetes/Controller",id:"Kubernetes/Controller",title:"\u63a7\u5236\u5668 CRD \u4ecb\u7ecd",description:"\u5b66\u4e60demo\u5730\u5740//github.com/schwarzeni/kubebuilder-appservice",source:"@site/docs/Kubernetes/7. Controller.md",sourceDirName:"Kubernetes",slug:"/Kubernetes/Controller",permalink:"/docs/Kubernetes/Controller",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Kubernetes/7. Controller.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"Kubernetes",previous:{title:"ansible\u5b89\u88c5k8s-1.24.12",permalink:"/docs/Kubernetes/ansible\u5b89\u88c5k8s-1.24.12"}},p={},c=[{value:"\u9879\u76ee\u67b6\u6784\u63cf\u8ff0",id:"\u9879\u76ee\u67b6\u6784\u63cf\u8ff0",level:3},{value:"\u9879\u76ee\u7ed3\u6784\u7ec4\u6210\u63cf\u8ff0",id:"\u9879\u76ee\u7ed3\u6784\u7ec4\u6210\u63cf\u8ff0",level:3},{value:"\u76ee\u5f55\u7b80\u8981\u8bf4\u660e\uff1a",id:"\u76ee\u5f55\u7b80\u8981\u8bf4\u660e",level:3},{value:"\u4e3b\u8981\u6587\u4ef6\u793a\u4f8b",id:"\u4e3b\u8981\u6587\u4ef6\u793a\u4f8b",level:3},{value:"<code>api/v1alpha1/appservice_types.go</code> (\u7b80\u5316\u7248\u672c)",id:"apiv1alpha1appservice_typesgo-\u7b80\u5316\u7248\u672c",level:4},{value:"<code>controllers/appservice_controller.go</code>",id:"controllersappservice_controllergo",level:4},{value:"\u5982\u4f55\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6",id:"\u5982\u4f55\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6",level:3}],s={toc:c},u="wrapper";function m(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u63a7\u5236\u5668-crd-\u4ecb\u7ecd"},"\u63a7\u5236\u5668 CRD \u4ecb\u7ecd"),(0,a.kt)("p",null,"\u5b66\u4e60demo\u5730\u5740: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/schwarzeni/kubebuilder-appservice"},"https://github.com/schwarzeni/kubebuilder-appservice")),(0,a.kt)("h3",{id:"\u9879\u76ee\u67b6\u6784\u63cf\u8ff0"},"\u9879\u76ee\u67b6\u6784\u63cf\u8ff0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"}," +---------------------+               +-----------------------------+\n |                     |  (1) Create   |                             |\n |      User (kubectl)  +---------------\x3e      Kubernetes API         |\n |                     |               |                             |\n +---------------------+               +-----------------------------+\n                                                ^\n                                                |\n                                                | (2) Watch\n                                                |\n+----------------------+          +-------------+-------------------+\n|                      |          |                                 |\n|     Operator         +-----------\x3e     Operator Controller         |\n|  Controller (Reconcile)          |                                 |\n|                      |          |    (Reconcile AppService)        |\n+----------------------+          +-------------+-------------------+\n                                                |\n                                                | (3) Create/Update\n                                                |\n                      +-----------------------+ |                +------------------+\n                      |                       | |                |                  |\n                      |   Kubernetes          | +----------------\x3e  Deployment      |\n                      |   Resources (Service, |                  |                  |\n                      |   Deployment, etc.)   |                  +------------------+\n                      +-----------------------+\n\n")),(0,a.kt)("h3",{id:"\u9879\u76ee\u7ed3\u6784\u7ec4\u6210\u63cf\u8ff0"},"\u9879\u76ee\u7ed3\u6784\u7ec4\u6210\u63cf\u8ff0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 Dockerfile                   # Docker \u6587\u4ef6\uff0c\u7528\u4e8e\u6253\u5305 Operator \u955c\u50cf\n\u251c\u2500\u2500 Makefile                     # \u6784\u5efa\u548c\u7ba1\u7406\u9879\u76ee\u7684 Makefile\n\u251c\u2500\u2500 PROJECT                      # kubebuilder \u9879\u76ee\u7684\u5b9a\u4e49\u6587\u4ef6\n\u251c\u2500\u2500 config/                      # \u914d\u7f6e\u76ee\u5f55\uff0c\u5b58\u653e CRD\u3001RBAC\u3001Webhook \u7b49\u914d\u7f6e\n\u2502   \u251c\u2500\u2500 crd/\n\u2502   \u2502   \u251c\u2500\u2500 bases/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 <group>_<version>_<resource>.yaml  # \u751f\u6210\u7684 CRD \u5b9a\u4e49\n\u2502   \u251c\u2500\u2500 default/\n\u2502   \u2502   \u2514\u2500\u2500 kustomization.yaml   # \u9ed8\u8ba4\u7684 kustomize \u6587\u4ef6\uff0c\u7528\u4e8e\u751f\u6210 YAML \u6e05\u5355\n\u2502   \u251c\u2500\u2500 manager/\n\u2502   \u2502   \u2514\u2500\u2500 manager.yaml         # \u7ba1\u7406\u5668 Deployment \u7684 YAML \u6587\u4ef6\n\u2502   \u251c\u2500\u2500 rbac/\n\u2502   \u2502   \u2514\u2500\u2500 role.yaml            # \u751f\u6210\u7684 RBAC \u6743\u9650\u63a7\u5236\u6587\u4ef6\n\u2502   \u251c\u2500\u2500 samples/\n\u2502   \u2502   \u2514\u2500\u2500 <group>_<version>_<resource>.yaml  # \u793a\u4f8b CRD \u6587\u4ef6\n\u251c\u2500\u2500 go.mod                       # Go \u4f9d\u8d56\u7ba1\u7406\u6587\u4ef6\n\u251c\u2500\u2500 go.sum                       # Go \u4f9d\u8d56\u7248\u672c\u9501\u5b9a\u6587\u4ef6\n\u251c\u2500\u2500 hack/                        # \u8f85\u52a9\u811a\u672c\n\u2502   \u2514\u2500\u2500 boilerplate.go.txt\n\u251c\u2500\u2500 api/                         # API \u5b9a\u4e49\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 v1alpha1/                # \u5b9a\u4e49\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u7248\u672c\n\u2502   \u2502   \u251c\u2500\u2500 appservice_types.go  # AppService CRD \u7684\u7ed3\u6784\u5b9a\u4e49\n\u2502   \u2502   \u251c\u2500\u2500 groupversion_info.go # \u6ce8\u518c API \u7ec4\u548c\u7248\u672c\u4fe1\u606f\n\u2502   \u2502   \u2514\u2500\u2500 zz_generated.deepcopy.go  # \u81ea\u52a8\u751f\u6210\u7684 deepcopy \u51fd\u6570\n\u251c\u2500\u2500 controllers/                 # \u63a7\u5236\u5668\u903b\u8f91\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 appservice_controller.go # \u4e0a\u9762\u63d0\u4f9b\u7684 Reconcile \u4ee3\u7801\u5e94\u8be5\u653e\u5728\u8fd9\u91cc\n\u2514\u2500\u2500 main.go                      # \u9879\u76ee\u7684\u5165\u53e3\u6587\u4ef6\n\n")),(0,a.kt)("p",null,"\u7cbe\u7b80\u7248\u672c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},".\n\u251c\u2500\u2500 config/                        # \u914d\u7f6e\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 crd/                       # CRD \u5b9a\u4e49\n\u2502   \u2502   \u2514\u2500\u2500 bases/\n\u2502   \u2502       \u2514\u2500\u2500 batch.example.com_appservices.yaml  # CRD YAML \u6587\u4ef6\n\u2502   \u251c\u2500\u2500 manager/                   # \u7ba1\u7406\u5668\u914d\u7f6e\n\u2502   \u2502   \u2514\u2500\u2500 manager.yaml           # \u90e8\u7f72\u63a7\u5236\u5668\u7684 YAML \u6587\u4ef6\n\u2502   \u251c\u2500\u2500 rbac/                      # RBAC \u914d\u7f6e\n\u2502   \u2502   \u2514\u2500\u2500 role.yaml              # \u63a7\u5236\u5668\u9700\u8981\u7684\u6743\u9650\n\u251c\u2500\u2500 api/                           # API \u5b9a\u4e49\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 v1alpha1/\n\u2502       \u251c\u2500\u2500 appservice_types.go    # \u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u7ed3\u6784\u5b9a\u4e49\n\u2502       \u2514\u2500\u2500 groupversion_info.go   # API \u7ec4\u548c\u7248\u672c\u7684\u6ce8\u518c\n\u251c\u2500\u2500 controllers/                   # \u63a7\u5236\u5668\u903b\u8f91\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 appservice_controller.go   # AppService \u63a7\u5236\u5668\u903b\u8f91\n\u251c\u2500\u2500 go.mod                         # Go \u4f9d\u8d56\u7ba1\u7406\u6587\u4ef6\n\u251c\u2500\u2500 go.sum                         # Go \u4f9d\u8d56\u7248\u672c\u9501\u5b9a\u6587\u4ef6\n\u2514\u2500\u2500 main.go                        # \u9879\u76ee\u7684\u5165\u53e3\u6587\u4ef6\n\n")),(0,a.kt)("h3",{id:"\u76ee\u5f55\u7b80\u8981\u8bf4\u660e"},"\u76ee\u5f55\u7b80\u8981\u8bf4\u660e\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"config/"),": \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff0c\u5305\u542b CRD \u5b9a\u4e49\u3001RBAC \u548c\u63a7\u5236\u5668\u90e8\u7f72\u7b49\u76f8\u5173 YAML \u6587\u4ef6\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"api/v1alpha1/"),": API \u5b9a\u4e49\u76ee\u5f55\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"Spec")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"Status")," \u7ed3\u6784\u4f53\uff0c\u4ee5\u53ca\u6ce8\u518c API \u7ec4\u548c\u7248\u672c\u7684\u4ee3\u7801\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"controllers/"),": \u63a7\u5236\u5668\u903b\u8f91\u6240\u5728\u76ee\u5f55\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"appservice_controller.go")," \u5b9e\u73b0\u4e86 ",(0,a.kt)("inlineCode",{parentName:"li"},"Reconcile")," \u903b\u8f91\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"main.go"),": \u9879\u76ee\u5165\u53e3\u6587\u4ef6\uff0c\u542f\u52a8\u63a7\u5236\u5668\u7ba1\u7406\u5668\u3002")),(0,a.kt)("h3",{id:"\u4e3b\u8981\u6587\u4ef6\u793a\u4f8b"},"\u4e3b\u8981\u6587\u4ef6\u793a\u4f8b"),(0,a.kt)("h4",{id:"apiv1alpha1appservice_typesgo-\u7b80\u5316\u7248\u672c"},(0,a.kt)("inlineCode",{parentName:"h4"},"api/v1alpha1/appservice_types.go")," (\u7b80\u5316\u7248\u672c)"),(0,a.kt)("p",null,"\u8fd9\u662f\u5b9a\u4e49 ",(0,a.kt)("inlineCode",{parentName:"p"},"AppService")," \u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u6587\u4ef6\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package v1alpha1\n\nimport (\n    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"\n)\n\n// AppServiceSpec defines the desired state of AppService\ntype AppServiceSpec struct {\n    // \u5b9a\u4e49\u4f60\u7684 AppService \u7684 Spec \u5b57\u6bb5\n    Replicas int32 `json:"replicas"`\n}\n\n// AppServiceStatus defines the observed state of AppService\ntype AppServiceStatus struct {\n    // \u5b9a\u4e49\u4f60\u7684 AppService \u7684 Status \u5b57\u6bb5\n    AvailableReplicas int32 `json:"availableReplicas"`\n}\n\n// +kubebuilder:object:root=true\n// +kubebuilder:subresource:status\n\n// AppService is the Schema for the appservices API\ntype AppService struct {\n    metav1.TypeMeta   `json:",inline"`\n    metav1.ObjectMeta `json:"metadata,omitempty"`\n\n    Spec   AppServiceSpec   `json:"spec,omitempty"`\n    Status AppServiceStatus `json:"status,omitempty"`\n}\n\n// +kubebuilder:object:root=true\n\n// AppServiceList contains a list of AppService\ntype AppServiceList struct {\n    metav1.TypeMeta `json:",inline"`\n    metav1.ListMeta `json:"metadata,omitempty"`\n    Items           []AppService `json:"items"`\n}\n\nfunc init() {\n    SchemeBuilder.Register(&AppService{}, &AppServiceList{})\n}\n')),(0,a.kt)("h4",{id:"controllersappservice_controllergo"},(0,a.kt)("inlineCode",{parentName:"h4"},"controllers/appservice_controller.go")),(0,a.kt)("p",null,"\u8fd9\u5c31\u662f\u4f60\u7ed9\u51fa\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Reconcile")," \u51fd\u6570\u7684\u5730\u65b9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package controllers\n\nimport (\n    "context"\n    "encoding/json"\n    "reflect"\n\n    "k8s.io/apimachinery/pkg/api/errors"\n    "k8s.io/apimachinery/pkg/types"\n    appsv1 "k8s.io/api/apps/v1"\n    corev1 "k8s.io/api/core/v1"\n    "sigs.k8s.io/controller-runtime/pkg/client"\n    "sigs.k8s.io/controller-runtime/pkg/reconcile"\n\n    batchv1alpha1 "example.com/api/v1alpha1"\n    ctrl "sigs.k8s.io/controller-runtime"\n)\n\nfunc (r *AppServiceReconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n    instance := &batchv1alpha1.AppService{}\n    if err := r.Client.Get(ctx, req.NamespacedName, instance); err != nil {\n        if errors.IsNotFound(err) {\n            return reconcile.Result{}, nil\n        }\n        return reconcile.Result{}, err\n    }\n\n    if instance.DeletionTimestamp != nil {\n        return reconcile.Result{}, nil\n    }\n\n    deployment := &appsv1.Deployment{}\n    if err := r.Client.Get(ctx, req.NamespacedName, deployment); err != nil {\n        if !errors.IsNotFound(err) {\n            return ctrl.Result{}, err\n        }\n\n        deployment = NewDeployment(instance)\n        if err := r.Client.Create(ctx, deployment); err != nil {\n            return ctrl.Result{}, err\n        }\n\n        svc := NewService(instance)\n        if err := r.Client.Create(ctx, svc); err != nil {\n            return ctrl.Result{}, err\n        }\n    } else {\n        oldSpec := &batchv1alpha1.AppServiceSpec{}\n        if err := json.Unmarshal([]byte(instance.Annotations["spec"]), oldSpec); err != nil {\n            return ctrl.Result{}, err\n        }\n        if !reflect.DeepEqual(instance.Spec, *oldSpec) {\n            newDeployment := NewDeployment(instance)\n            currDeployment := &appsv1.Deployment{}\n            if err := r.Client.Get(ctx, req.NamespacedName, currDeployment); err != nil {\n                return ctrl.Result{}, err\n            }\n            currDeployment.Spec = newDeployment.Spec\n            if err := r.Client.Update(ctx, currDeployment); err != nil {\n                return ctrl.Result{}, err\n            }\n\n            newService := NewService(instance)\n            currService := &corev1.Service{}\n            if err := r.Client.Get(ctx, req.NamespacedName, currService); err != nil {\n                return ctrl.Result{}, err\n            }\n            currIP := currService.Spec.ClusterIP\n            currService.Spec = newService.Spec\n            currService.Spec.ClusterIP = currIP\n            if err := r.Client.Update(ctx, currService); err != nil {\n                return ctrl.Result{}, err\n            }\n        }\n    }\n\n    data, _ := json.Marshal(instance.Spec)\n    if instance.Annotations != nil {\n        instance.Annotations["spec"] = string(data)\n    } else {\n        instance.Annotations = map[string]string{"spec": string(data)}\n    }\n    if err := r.Client.Update(ctx, instance); err != nil {\n        return ctrl.Result{}, err\n    }\n\n    return ctrl.Result{}, nil\n}\n')),(0,a.kt)("h3",{id:"\u5982\u4f55\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6"},"\u5982\u4f55\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"kubebuilder")," \u5de5\u5177\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6\uff1a"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5b89\u88c5 ",(0,a.kt)("inlineCode",{parentName:"strong"},"kubebuilder")),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"go install sigs.k8s.io/kubebuilder/cmd@latest\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u521b\u5efa\u9879\u76ee"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubebuilder init --domain example.com --repo example.com/api\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u521b\u5efa API \u548c\u63a7\u5236\u5668"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubebuilder create api --group batch --version v1alpha1 --kind AppService\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u7f16\u8f91\u751f\u6210\u7684\u63a7\u5236\u5668\u6587\u4ef6\u548c API \u6587\u4ef6"),"\uff1a\u6839\u636e\u4f60\u7684\u903b\u8f91\uff0c\u4fee\u6539\u63a7\u5236\u5668\u6587\u4ef6\u5e76\u6dfb\u52a0 ",(0,a.kt)("inlineCode",{parentName:"p"},"AppService")," \u8d44\u6e90\u7684\u4e1a\u52a1\u903b\u8f91\u3002"))}m.isMDXComponent=!0}}]);